PWB-GENERATED FILE: DO NOT MODIFY
[shared-]
	version=3
	project="C:\PROJET\VLAMITS2\VLA2_1.MAK"
	buildmode=3
[edit-]
	srch=doselect
	fSrchRe=0
	rpl=
	src=
	fRplRe=25600
[pwb]
	screen=25 80
	winstyle=7
	file="<COMPILE>Build Results" 1 1 1 1
	wnd=c 1 0 24 80 0 0
	file="<SEARCH>Search Results" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<PRINT>Print Results" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<RECORD>Record" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<CLIPBOARD>Clipboard" 1 1 1 1
	wnd=c 0 0 0 0 0 0
	file="<pwbhelp>Help" 1 1 1 1
	wnd=c 1 0 24 80 0 0
	file="<browse>Browser Output" 1 1 1 1
	wnd=c 0 0 0 0 0 0
[build]
    build: language "None"
    build: template "DOS EXE" modified
    build: macro DEBUG "1"
    build: macro ASM "ml"
    build: macro H2INC "h2inc"
    build: macro AFLAGS_G "/W2 /WX"
    build: macro AFLAGS_D "/Sg /Sc /Zi /Fl"
    build: macro AFLAGS_R "/nologo"
    build: macro MAPFILE_D "$(PROJ).map"
    build: macro MAPFILE_R "NUL"
    build: macro LFLAGS_G "/NOI /BATCH /ONERROR:NOEXE"
    build: macro LFLAGS_D "/CO /MAP:FULL /NOFA /NOPACKC /NOPACKF"
    build: macro LFLAGS_R "/EXE /FAR /PACKC"
    build: macro LINKER "link"
    build: macro ILINK "ilink"
    build: macro LRF "echo > NUL"
    build: macro ILFLAGS "/a /e"
    build: macro LLIBS_G ""
    build: macro LLIBS_D ""
    build: macro LLIBS_R ""
    build: all $(PROJ).exe
    build: target $(PROJ).exe lrf_exe link_exe
    build: inference compile .asm.obj asm_asm_obj
    build: inference .asm.sbr asm_asm_sbr
    build: inference .h.inc h2inc_h_inc
    build: release command asm_asm_obj "$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /Fo$@ $<"
    build: debug command asm_asm_obj "$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /Fo$@ $<"
    build: release command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FR$@ $<"
    build: debug command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FR$@ $<"
    build: release command h2inc_h_inc "$(H2INC) /c $(CFLAGS_G) $(CFLAGS_R) $<"
    build: debug command h2inc_h_inc "$(H2INC) /c $(CFLAGS_G) $(CFLAGS_D) $<"
    build: release command lrf_exe "$(LRF) @<<$(PROJ).lrf\n$(RT_OBJS: = +^\n) $(OBJS: = +^\n)\n$@\n$(MAPFILE_R)\n$(LIBS: = +^\n) +\n$(LLIBS_G: = +^\n) +\n$(LLIBS_R: = +^\n)\n$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_R);\n<<"
    build: debug command lrf_exe "$(LRF) @<<$(PROJ).lrf\n$(RT_OBJS: = +^\n) $(OBJS: = +^\n)\n$@\n$(MAPFILE_D)\n$(LIBS: = +^\n) +\n$(LLIBS_G: = +^\n) +\n$(LLIBS_D: = +^\n)\n$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_D);\n<<"
    build: command link_exe "$(LINKER) @$(PROJ).lrf"
    build: command run "$(PROJ).exe $(RUNFLAGS)"
    build: command debug "CV $(CVFLAGS) $(PROJ).exe $(RUNFLAGS)"
    build: suffixes
    build: include dependencies
    build: include no system
    build: include .asm "^[ \t]*include[ \t]+\\([^ \t]+\\)"
    build: include .inc "^[ \t]*include[ \t]+\\([^ \t]+\\)"
    build: include .rc "^[ \t]*rcinclude[ \t]+\\([^ \t]+\\)"
    build: include .rc "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\""
    build: include .rc "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" system
    build: include .rc "^\\:i\\:b\\{ICON\\!BITMAP\\!FONT\\!CURSOR\\}\\:b\\{LOADONCALL\\:b\\!PRELOAD\\:b\\!FIXED\\:b\\!MOVABLE\\:b\\!DISCARDABLE\\:b\\!\\}*\\(\\:p\\)"
    build: include .c "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .c "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .h "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .h "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .cxx "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .cxx "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .cpp "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .cpp "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .hxx "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .hxx "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .hpp "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
    build: include .hpp "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
    build: include .bas "^[ \t]*'[ \t]*\\$include:[ \t]*'\\([^']+\\)'"
    build: include .bas "^[ \t]*rem[ \t]*\\$include:[ \t]*'\\([^']+\\)'"
    build: include .bi "^[ \t]*'[ \t]*\\$include:[ \t]*'\\([^']+\\)'"
    build: include .bi "^[ \t]*rem[ \t]*\\$include:[ \t]*'\\([^']+\\)'"
    build: include .for "^[ \t$][ \t]*[iI][nN][cC][lL][uU][dD][eE][ \t:]*'[ \t]*\\(\\:p\\)[ \t]*'" case
    build: include .fi "^[ \t$][ \t]*[iI][nN][cC][lL][uU][dD][eE][ \t:]*'[ \t]*\\(\\:p\\)[ \t]*'" case system
    build: include .fd "^[ \t$][ \t]*[iI][nN][cC][lL][uU][dD][eE][ \t:]*'[ \t]*\\(\\:p\\)[ \t]*'" case system
    build: include .inc "^[ \t$][ \t]*[iI][nN][cC][lL][uU][dD][eE][ \t:]*'[ \t]*\\(\\:p\\)[ \t]*'" case
    build: message "^SYS[0-9][0-9][0-9][0-9]:\\:b"
    build: message "^NET[0-9][0-9][0-9][0-9]:\\:b"
    build: message "^\\(\\{\\:p\\!<[^>]*>\\}\\) \\([0-9]+\\) \\([0-9]+\\)[ ]*:" file line col
    build: message "^\\(\\:p\\):\\([0-9]+\\):" file line
    build: message "^[^(]+(\\(\\:p\\)) : error L[0-9]+[ ]*: '_*\\([^']+\\)' : unresolved external" file token
    build: message "^[^(]+(\\(\\:p\\)) : [^L]+L[124]" file
    build: message "^LINK [^L]+L[124]"
    build: message "^ILINK : [^L]+L[124]"
    build: message "Rebuild all" file line
    build: message "^NMAKE : [^U]+U[124]"
    build: message "^\\:p : [^U]+U[124]\\:d\\:d\\:d"
    build: message "^\\(\\:p\\)(\\([0-9]+\\))[ \t]*:[ \t]*[^A]+A[12456]" file line
    build: message "^\\(\\:p\\)(\\(\\:z\\)) : [^H]+HI[124]" file line
    build: message "^[^H]+HI[124][0-9]+: "
    build: message "^DOSXNT :"
    build: message "^bscmake: [^B]+BK[124]"
    build: message "^sbrpack: [^S]+SB[124]"
    build: message "^BIND : [^U]+U[124]"
    build: message "^\\(\\:p\\)(\\(\\:z\\)) RC:" file line
    build: message "\\(\\:p\\)(\\(\\:z\\)) : error RC\\:z:" file line
    build: message "^RC:"
    build: message "^RC :"
    build: message "^LIB :"
    build: message "^MPC :"
    build: message "^CVPACK :"
    build: message "Rebuild all" file line
    build: message "Build all" file line
    build: message "^\\(\\:p\\)(\\(\\:z\\)) : [^C]+C[124]" file line
    build: message "^[^C]+C[124][0-9]+: "
    build: message "^[^D]+D[124][0-9]+ : "
    build: message "^\\(\\:p\\)([ \t]*\\(\\:z\\),[ \t]*\\(\\:z\\)) : " file line col
    build: message "^[]*BC :"
    build: message "^\\(\\:p\\)(\\(\\:z\\)) : [^F]+F[1234]" file line
    build: message "^[^F]+F[1234][0-9]+: "
    build: message "Compile ..\\LISTING\\TOOLS\\SS02ROOM.ASM" file line
